# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:

- stage: 'Operations'
  displayName: 'Operations'
  jobs:
  - job: 'Operation'
    displayName: 'Operations'
    pool:
      vmImage: 'windows-latest'
      demands:
        - npm

    steps:
    - task: AzurePowerShell@5
      inputs:
        azureSubscription: 'ARMConnection'
        ScriptType: 'InlineScript'
        Inline: |
                   
                    Install-Module -Name Az.PolicyInsights -RequiredVersion 1.3.0 -Scope CurrentUser -Force
                    
                    Install-Module -Name Az.Security -RequiredVersion 0.7.8 -Scope CurrentUser -Force
                    
                    Get-InstalledModule -Name Az -AllVersions
                    
                    Get-InstalledModule -Name Az.PolicyInsights -AllVersions
                    
                    Get-InstalledModule -Name Az.Security -AllVersions
                    
                    Get-AzPolicyStateSummary -ResourceGroupName "SampleDevOpsIntegration"
                    
                    $ResourceGroup = Get-AzResourceGroup -Name "SampleDevOpsIntegration"
                    
                    $PolicyAssignment = Get-AzPolicyAssignment -Scope $ResourceGroup.ResourceId -IncludeDescendent
                    
                    $initiative = Get-AzPolicySetDefinition -Name '8df1d260-19be-4d4d-87a8-a95760bff001'
                    
                    foreach ($policy in $initiative.Properties.policyDefinitions) {
                    $eachPolicy =  Get-AzPolicyDefinition -Id $policy.policyDefinitionId
                    
                    if($eachPolicy.Properties.Parameters.effect.defaultValue -eq 'DeployIfNotExists') {
                    $uid = New-Guid
                    
                    $activeRemediation = Get-AzPolicyRemediation | Where-Object {$_.PolicyAssignmentId -eq $PolicyAssignment.PolicyAssignmentId[1] -AND $_.PolicyDefinitionReferenceId -eq $policy.PolicyDefinitionReferenceId -AND $_.ProvisioningState -ne 'Succeeded'}
                    
                    if($activeRemediation -eq $null) {
                    
                    Start-AzPolicyRemediation -Scope '/subscriptions/09e22a67-9479-41ae-8b11-5e070ff85997/resourceGroups/SampleDevOpsIntegration' -PolicyAssignmentId $PolicyAssignment.PolicyAssignmentId[1] -PolicyDefinitionReferenceId $policy.PolicyDefinitionReferenceId -Name "NewRemeadiation-$uid"  -ResourceDiscoveryMode ReEvaluateCompliance
                    
                    }
                    }
                    }
        errorActionPreference: 'SilentlyContinue'
        azurePowerShellVersion: 'LatestVersion'